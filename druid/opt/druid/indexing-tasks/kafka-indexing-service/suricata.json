{
  "type": "kafka",
  "dataSchema": {
    "dataSource": "suricata",
    "parser": {
      "type": "string",
      "parseSpec": {
        "format": "json",
        "timestampSpec": {
          "column": "timestamp",
          "format": "auto"
        },
        "dimensionsSpec": {
          "spatialDimensions": [
                                {
                                   "dimName": "geo_ip_dst",
                                   "dims": ["geo_ip_dst_lat","geo_ip_dst_lon"]
                                },
                                {
                                   "dimName": "geo_ip_src",
                                   "dims": ["geo_ip_src_lat","geo_ip_src_lon"]
                                }
                        ],
          "dimensions": ["company","site","probe","endpoint","event_type","probe_ip","in_iface","ipv4_src","user_src","port_src","ipv4_dst","user_dst","port_dst","proto","alert_action","alert_signature_id","alert_rev","alert_signature","alert_category","alert_severity","service","http_hostname","http_url","http_content_type","http_method","http_protocol","http_status","http_length","http_user_agent","flow_id","fileinfo_filename","fileinfo_magic","fileinfo_state","fileinfo_tx_id","dns_type","dns_rrtype","dns_rrname","dns_id","dns_tx_id","dns_rcode","dns_rdata","smtp_helo","tls_version","ssh_client_version","ssh_server_version","http_tx_id","risk_assets_unregistered","user"]
        }
      }
    },
    "metricsSpec": [
            {
              "type": "count",
              "name": "events"
            },
            {
              "type": "longSum",
              "fieldName": "risk_dst_asset_value",
              "name": "risk_dst_asset_value_sum"
            },
            {
              "type": "longMin",
              "fieldName": "risk_dst_asset_value",
              "name": "risk_dst_asset_value_min"
            },
            {
              "type": "longMax",
              "fieldName": "risk_dst_asset_value",
              "name": "risk_dst_asset_value_max"
            },
            {
              "type": "doubleSum",
              "fieldName": "risk",
              "name": "risk_sum"
            },
            {
              "type": "doubleMin",
              "fieldName": "risk",
              "name": "risk_min"
            },
            {
              "type": "doubleMax",
              "fieldName": "risk",
              "name": "risk_max"
            },
            {
              "type": "longSum",
              "fieldName": "risk_ease",
              "name": "risk_ease_sum"
            },
            {
              "type": "longMin",
              "fieldName": "risk_ease",
              "name": "risk_ease_min"
            },
            {
              "type": "longMax",
              "fieldName": "risk_ease",
              "name": "risk_ease_max"
            },
            {
              "type": "longSum",
              "fieldName": "risk_src_asset_value",
              "name": "risk_src_asset_value_sum"
            },
            {
              "type": "longMin",
              "fieldName": "risk_src_asset_value",
              "name": "risk_src_asset_value_min"
            },
            {
              "type": "longMax",
              "fieldName": "risk_src_asset_value",
              "name": "risk_src_asset_value_max"
            },
            {
              "type": "longSum",
              "fieldName": "risk_reliability",
              "name": "risk_reliability_sum"
            },
            {
              "type": "longMin",
              "fieldName": "risk_reliability",
              "name": "risk_reliability_min"
            },
            {
              "type": "longMax",
              "fieldName": "risk_reliability",
              "name": "risk_reliability_max"
            },
            {
              "type": "longSum",
              "fieldName": "risk_severity",
              "name": "risk_severity_sum"
            },
            {
              "type": "longMin",
              "fieldName": "risk_severity",
              "name": "risk_severity_min"
            },
            {
              "type": "longMax",
              "fieldName": "risk_severity",
              "name": "risk_severity_max"
            },
            {
              "type": "longSum",
              "fieldName": "http_length",
              "name": "http_length_sum"
            },
            {
              "type": "longMin",
              "fieldName": "http_length",
              "name": "http_length_min"
            },
            {
              "type": "longMax",
              "fieldName": "http_length",
              "name": "http_length_max"
            },
            {
              "type": "longSum",
              "fieldName": "fileinfo_size",
              "name": "fileinfo_size_sum"
            },
            {
              "type": "longMin",
              "fieldName": "fileinfo_size",
              "name": "fileinfo_size_min"
            },
            {
              "type": "longMax",
              "fieldName": "fileinfo_size",
              "name": "fileinfo_size_max"
            },
            {
              "type": "longSum",
              "fieldName": "dns_ttl",
              "name": "dns_ttl_sum"
            },
            {
              "type": "longMin",
              "fieldName": "dns_ttl",
              "name": "dns_ttl_min"
            },
            {
              "type": "longMax",
              "fieldName": "dns_ttl",
              "name": "dns_ttl_max"
            }
    ],
    "granularitySpec": {
      "type": "uniform",
      "segmentGranularity": "DAY",
      "queryGranularity": "MINUTE"
    }
  },
  "tuningConfig": {
    "type": "kafka",
    "maxRowsPerSegment": 5000000,
    "maxRowsInMemory": 75000,
    "intermediatePersistPeriod": "PT1M",
    "resetOffsetAutomatically": true
  },
  "ioConfig": {
    "topic": "suricata",
    "consumerProperties": {
      "bootstrap.servers": "kafka01:9092",
      "group.id": "druid-suricata",
      "client.id": "druid",
      "auto.offset.reset": "latest",
      "enable.auto.commit": true,
      "auto.commit.interval.ms": 2500
    },
    "taskCount": 1,
    "replicas": 1,
    "taskDuration": "PT10M",
    "useEarliestOffset": false,
    "completionTimeout": "PT5M"
  }
}

